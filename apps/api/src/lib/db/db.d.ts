/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface AccountsUser {
  created_at: Generated<Timestamp>;
  email: string;
  id: Generated<string>;
  name: string;
  updated_at: Generated<Timestamp>;
}

export interface TenantsOrganizationMembership {
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  organization_id: string;
  updated_at: Generated<Timestamp>;
  user_id: string;
}

export interface TenantsOrganization {
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  name: string;
  updated_at: Generated<Timestamp>;
}

export interface TenantsProgram {
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  name: string;
  organization_id: string;
  updated_at: Generated<Timestamp>;
}

export interface DB {
  accounts_users: AccountsUser;
  tenants_organization_memberships: TenantsOrganizationMembership;
  tenants_organizations: TenantsOrganization;
  tenants_programs: TenantsProgram;
}
